[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mInitial source changes: [0m
[0m[[0mdebug[0m] [0m	removed:Set()[0m
[0m[[0mdebug[0m] [0m	added: Set(/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixTypes.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTypeSignatures.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutByNameParameter.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralBooleans.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMutableMaps.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutIterables.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMutableSets.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLazySequences.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPartiallyAppliedFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralNumbers.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutSets.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPartialFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralStrings.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPathDependentTypes.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutUniformAccessPrinciple.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRecursion.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMaps.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutConstructors.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPatternMatching.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPreconditions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTuples.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLists.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutNamedAndDefaultArguments.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInteroperability.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRepeatedParameters.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutObjects.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRange.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTraits.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutForExpressions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/Koans.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTypeVariance.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTraversables.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutParentClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutSequencesAndArrays.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutOptions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutManifests.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutValAndVar.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMethods.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala)[0m
[0m[[0mdebug[0m] [0m	modified: Set()[0m
[0m[[0mdebug[0m] [0mRemoved products: Set()[0m
[0m[[0mdebug[0m] [0mModified external sources: Set()[0m
[0m[[0mdebug[0m] [0mModified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0mInitial directly invalidated sources: Set(/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixTypes.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTypeSignatures.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutByNameParameter.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralBooleans.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMutableMaps.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutIterables.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMutableSets.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLazySequences.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPartiallyAppliedFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralNumbers.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutSets.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPartialFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralStrings.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPathDependentTypes.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutUniformAccessPrinciple.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRecursion.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMaps.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutConstructors.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPatternMatching.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPreconditions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTuples.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLists.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutNamedAndDefaultArguments.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInteroperability.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRepeatedParameters.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutObjects.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRange.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTraits.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutForExpressions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/Koans.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTypeVariance.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTraversables.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutParentClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutSequencesAndArrays.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutOptions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutManifests.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutValAndVar.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMethods.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala)[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mSources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m	product: Set()[0m
[0m[[0mdebug[0m] [0m	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m	external source: Set()[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixTypes.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTypeSignatures.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutByNameParameter.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralBooleans.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMutableMaps.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutIterables.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMutableSets.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLazySequences.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPartiallyAppliedFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralNumbers.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutSets.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPartialFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLiteralStrings.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPathDependentTypes.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutUniformAccessPrinciple.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRecursion.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMaps.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutConstructors.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPatternMatching.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutPreconditions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTuples.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutLists.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutNamedAndDefaultArguments.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInteroperability.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRepeatedParameters.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutObjects.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutRange.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTraits.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutForExpressions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/Koans.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTypeVariance.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutTraversables.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutParentClasses.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutSequencesAndArrays.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutOptions.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutManifests.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutValAndVar.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutMethods.scala, /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala)[0m
[0m[[0mdebug[0m] [0mRecompiling all 48 sources: invalidated sources (48) exceeded 50.0% of all sources[0m
[0m[[0minfo[0m] [0mCompiling 48 Scala sources to /Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/target/scala-2.9.2/classes...[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 1c3cb1e1, interfacing (CompilerInterface) with Scala compiler version 2.9.2[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-d[0m
[0m[[0mdebug[0m] [0m	/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/target/scala-2.9.2/classes[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsfd.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Resources/Java/JavaRuntimeSupport.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/laf.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/sunrsasign.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/Users/jeramy/.sbt/boot/scala-2.9.2/lib/scala-library.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/target/scala-2.9.2/classes[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala:3: object scalatest is not a member of package org[0m
[0m[[31merror[0m] [0mimport org.scalatest.matchers.ShouldMatchers[0m
[0m[[31merror[0m] [0m           ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala:4: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala:9: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("asserts can take a boolean argument") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala:13: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("asserts can include a message") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala:17: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("true and false values can be compared with should matchers") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala:21: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("booleans in asserts can test equality") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutAsserts.scala:27: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("sometimes we expect you to fill in the values") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutByNameParameter.scala:3: object support is not a member of package org.functionalkoans.forscala[0m
[0m[[31merror[0m] [0mimport org.functionalkoans.forscala.support.KoanSuite[0m
[0m[[31merror[0m] [0m                                    ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutByNameParameter.scala:13: not found: value koan[0m
[0m[[31merror[0m] [0m  koan([0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutByNameParameter.scala:34: not found: value koan[0m
[0m[[31merror[0m] [0m  koan([0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutByNameParameter.scala:55: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""By name parameters can also be used with an Object and apply to make interesting block-like calls""") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:11: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes have an automatic equals method that works") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:25: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes have an automatic hashcode method that works") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:36: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes have a convenient way they can be created") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:48: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes have a convenient toString method defined") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:54: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes have automatic properties") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:65: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes can have mutable properties") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:78: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Safer alternatives exist for altering case classes") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:95: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes have default and named parameters") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutCaseClasses.scala:120: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Case classes can be disassembled to their constituent parts as a tuple") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutClasses.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutClasses.scala:13: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("val parameters in class definition define getter") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutClasses.scala:18: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("var parameters in class definition define getter and setter") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutClasses.scala:29: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("fields defined internally are private to class") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutConstructors.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutConstructors.scala:16: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Primary constructor specified with a parameter requires that parameter to be passed in") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutConstructors.scala:23: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Class with no class parameters is called with no arguments") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:8: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None equals None") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:12: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None should be identical to None") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:18: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None can be converted to a String") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:22: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("An empty list can be represented by another nothing value: Nil") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:26: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None can be converted to an empty list") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:31: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None is considered empty") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:35: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None can be cast Any, AnyRef or AnyVal") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:41: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None cannot be cast to all types of objects") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:48: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("None can be used with Option instead of null references") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:54: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Some is the opposite of None for Option types") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEmptyValues.scala:60: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Option.getOrElse can be used to provide a default in the case of None") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala:4: object scalatest is not a member of package org[0m
[0m[[31merror[0m] [0mimport org.scalatest.matchers.ShouldMatchers[0m
[0m[[31merror[0m] [0m           ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala:11: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Value assigns a numerical value to fields") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala:37: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Enumerations can set their own index and name") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala:63: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Enumeration declarations can be done on one line") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala:79: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Enumerations can be declared with a string value only") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutEnumerations.scala:103: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("You can extend the Enumeration by extending the Val class.") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:3: object support is not a member of package org.functionalkoans.forscala[0m
[0m[[31merror[0m] [0mimport org.functionalkoans.forscala.support.KoanSuite[0m
[0m[[31merror[0m] [0m                                    ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:6: not found: value koan[0m
[0m[[31merror[0m] [0m   koan("When you create a case class, it automatically can be used with pattern matching since it has an extractor") {[0m
[0m[[31merror[0m] [0m   ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:19: not found: value koan[0m
[0m[[31merror[0m] [0m   koan([0m
[0m[[31merror[0m] [0m   ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:40: not found: value koan[0m
[0m[[31merror[0m] [0m   koan("""Of course an extractor can be used in pattern matching...""") {[0m
[0m[[31merror[0m] [0m   ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:57: not found: value koan[0m
[0m[[31merror[0m] [0m  koan([0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:75: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("As long as the method signatures aren't the same, you can have an many unapply methods as you want") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:93: not found: value koan[0m
[0m[[31merror[0m] [0m  koan([0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:112: not found: value koan[0m
[0m[[31merror[0m] [0m   koan([0m
[0m[[31merror[0m] [0m   ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutExtractors.scala:135: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("In this koan we use the unapply for pattern matching employee objects") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutForExpressions.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutForExpressions.scala:7: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("For loops can be simple") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutForExpressions.scala:16: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("For loops can contain additional logic") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutForExpressions.scala:26: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("For expressions can nest, with later generators varying more rapidly than earlier ones") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala:3: object scalatest is not a member of package org[0m
[0m[[31merror[0m] [0mimport org.scalatest.matchers.ShouldMatchers[0m
[0m[[31merror[0m] [0m           ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala:4: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala:8: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("String can be placed in format") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala:13: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Character Literals can be an a single character") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala:26: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Character Literals can be an escape sequence, including octal or hexidecimal") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala:41: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Formatting can also include numbers") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutFormatting.scala:46: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Formatting can be used for any number of items, like a string and a number") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:7: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Meet lambda. Anonymous function") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:35: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("An anonymous function can also take on a different look by taking out the brackets") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:41: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Meet closure. Closure is any function that closes over the environment") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:57: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("We can take that closure and throw into a method and it will still hold the environment") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:72: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("function returning another function") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:87: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("function returning another function " +[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:99: not found: value koan[0m
[0m[[31merror[0m] [0m  koan([0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:110: not found: value koan[0m
[0m[[31merror[0m] [0m  koan([0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:130: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Currying is a technique to transform function with multiple parameters to function with one parameter") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutHigherOrderFunctions.scala:138: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("Currying allows you to create specialized version of generalized function") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:3: object scalatest is not a member of package org[0m
[0m[[31merror[0m] [0mimport org.scalatest.matchers.ShouldMatchers[0m
[0m[[31merror[0m] [0m           ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:4: not found: object language[0m
[0m[[31merror[0m] [0mimport language.implicitConversions[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:5: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:9: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Implicits wrap around existing classes to provide extra functionality[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:23: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Implicits rules can be imported into your scope with an import""") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:41: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Implicits can be used to automatically convert one type to another""") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:51: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Implicits can be used declare a value to be provided as a default as[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:65: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Implicit Function Parameters can contain a list of implicits""") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutImplicits.scala:79: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Default arguments though are preferred to Implicit Function Parameters""") {[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:4: not found: object language[0m
[0m[[31merror[0m] [0mimport language.postfixOps[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:5: object scalatest is not a member of package org[0m
[0m[[31merror[0m] [0mimport org.scalatest.matchers.ShouldMatchers[0m
[0m[[31merror[0m] [0m           ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:9: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Simple: Infix Operators are available if an object[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:17: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Infix Operators do NOT work if an object[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:25: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Postfix operators work if an object[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:33: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Prefix operators work if an object[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixPrefixAndPostfixOperators.scala:39: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Here we create our own prefix operator for our own class.[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixTypes.scala:3: object scalatest is not a member of package org[0m
[0m[[31merror[0m] [0mimport org.scalatest.matchers.ShouldMatchers[0m
[0m[[31merror[0m] [0m           ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixTypes.scala:4: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixTypes.scala:8: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""We can make a type infix, meaning that the type can be displayed in complement[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInfixTypes.scala:24: not found: value koan[0m
[0m[[31merror[0m] [0m  koan("""Of course we can make this a bit more elegant by creating an infix operator[0m
[0m[[31merror[0m] [0m  ^[0m
[0m[[31merror[0m] [0m/Users/jeramy/projects/scala-koans/src/test/scala/org/functionalkoans/forscala/AboutInteroperability.scala:3: not found: object support[0m
[0m[[31merror[0m] [0mimport support.KoanSuite[0m
[0m[[31merror[0m] [0m       ^[0m
[0m[[31merror[0m] [0m390 errors found[0m
[0m[[0mdebug[0m] [0mCompilation failed (CompilerInterface)[0m
[0m[[31merror[0m] [0m(compile:[31mcompile[0m) Compilation failed[0m
