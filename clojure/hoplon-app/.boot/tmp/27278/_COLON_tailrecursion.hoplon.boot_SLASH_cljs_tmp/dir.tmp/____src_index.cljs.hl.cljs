(ns tailrecursion.hoplon.app-pages.G__7556 (:require [tailrecursion.javelin :refer [alts! cell-map propagate! next-rank deref* lift cell input? bf-seq destroy-cell! last-rank set-cell! set-formula! cell?]] [tailrecursion.hoplon :refer [script do! track article noscript command h4 h3 mark basefont h5 span input h2 th label h6 pre nav vector?* address sup h1 table font body option datalist u safe-nth on! footer select q samp source summary li p td noframes node? iframe rel tr s *initfns* add-attributes! colgroup relx pad-seq html dfn optgroup tbody text-val! ul hgroup sub strong data progress acronym append-child img details fieldset em html-time rt when-dom video keygen div val-id dt ol link init form is-ie8 check-val! menu timeout del a parse-args head area legend hr dir header param meter tfoot blockquote eventsource b dl figcaption caption style rel-event abbr ruby applet html-meta bdi embed rp figure on-append! canvas section object strike title button output audio add-children! dd bdo cite code kbd big seq?* frame rely col tt i ins thead unsplice isindex frameset center spliced base $text by-id $comment br textarea wbr html-map small add-initfn! aside html-var]]) (:require-macros [tailrecursion.javelin :refer [cell-doseq cell= defc defc= mx with-let mx2 mirror set-cell!= refer-all macroexpand-all]] [tailrecursion.hoplon :refer [text defelem loop-tpl def-values flatten-expr]]))

(defn ^:export hoploninit [] (do) (tailrecursion.hoplon/init [(flatten-expr (h1 "Hello, World!"))]))
